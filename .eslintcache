[{"C:\\Users\\petro\\refract-labs-project\\src\\index.js":"1","C:\\Users\\petro\\refract-labs-project\\src\\App.js":"2","C:\\Users\\petro\\refract-labs-project\\src\\reportWebVitals.js":"3","C:\\Users\\petro\\refract-labs-project\\src\\components\\Header.js":"4","C:\\Users\\petro\\refract-labs-project\\src\\components\\ScheduleRepair.js":"5","C:\\Users\\petro\\refract-labs-project\\src\\components\\Inventory.js":"6","C:\\Users\\petro\\refract-labs-project\\src\\components\\Customers.js":"7","C:\\Users\\petro\\refract-labs-project\\src\\components\\ScheduleRepairDialog.js":"8","C:\\Users\\petro\\refract-labs-project\\src\\components\\LandingPage.js":"9","C:\\Users\\petro\\refract-labs-project\\src\\components\\Footer.js":"10"},{"size":237,"mtime":1608231055888,"results":"11","hashOfConfig":"12"},{"size":679,"mtime":1608356409261,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":1908,"mtime":1608406254762,"results":"15","hashOfConfig":"12"},{"size":5143,"mtime":1608397956695,"results":"16","hashOfConfig":"12"},{"size":1611,"mtime":1608356535612,"results":"17","hashOfConfig":"12"},{"size":4638,"mtime":1608405937306,"results":"18","hashOfConfig":"12"},{"size":2295,"mtime":1608405937306,"results":"19","hashOfConfig":"12"},{"size":736,"mtime":1608349512868,"results":"20","hashOfConfig":"12"},{"size":845,"mtime":1608403486236,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1buv02z",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\petro\\refract-labs-project\\src\\index.js",[],["44","45"],"C:\\Users\\petro\\refract-labs-project\\src\\App.js",[],"C:\\Users\\petro\\refract-labs-project\\src\\reportWebVitals.js",[],"C:\\Users\\petro\\refract-labs-project\\src\\components\\Header.js",["46"],"C:\\Users\\petro\\refract-labs-project\\src\\components\\ScheduleRepair.js",["47","48","49"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport ScheduleRepairDialog from './ScheduleRepairDialog';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 25,\r\n    marginLeft: 10,\r\n\r\n  },\r\n  gridContainer: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  paper: {\r\n    height: '50vh',\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  container: {\r\n    maxHeight: '90%',\r\n  },\r\n  scheduleRepairDialogButton: {\r\n    paddingTop: '1vh',\r\n  },\r\n}));\r\n\r\nconst columns = [\r\n  { id: \"date\", label: \"Date\", minWidth: 50 },\r\n  { id: \"time\", label: \"Time\", minWidth: 100 },\r\n  { id: \"description\", label: \"Description\", minWidth: 100 },\r\n]\r\n\r\nfunction createData(date, time, description) {\r\n  return { date, time, description }\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Sun Dec 20 2020\", \"4:00pm\", \"Repair Mark's Bike\"),\r\n  createData(\"Sun Dec 20 2020\", \"5:00pm\", \"Repair John's Bike\"),\r\n  createData(\"Mon Dec 21 2020\", \"3:00pm\", \"Repair Jack's Bike\"),\r\n  createData(\"Tue Dec 22 2020\", \"11:00am\", \"Repair Harry's Bike\"),\r\n  createData(\"Wed Dec 23 2020\", \"9:00am\", \"Repair Jake's Bike\"),\r\n  createData(\"Thu Dec 24 2020\", \"8:00am\", \"Repair Thad's Bike\"),\r\n  createData(\"Thu Dec 24 2020\", \"9:30am\", \"Repair Trisha's Bike\"),\r\n  createData(\"Thu Dec 24 2020\", \"11:00am\", \"Repair Tom's Bike\"),\r\n  createData(\"Fri Dec 25 2020\", \"9:15am\", \"Repair Benjamin's Bike\"),\r\n  createData(\"Fri Dec 23 2020\", \"11:45am\", \"Repair Jake's Bike\"),\r\n\r\n]\r\n\r\nexport default function DataTable() {\r\n  const classes = useStyles();\r\n  const [value, onChange] = useState(new Date());\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h2>Appointments</h2>\r\n      <Grid container spacing={8} className={classes.gridContainer}>\r\n        <Grid item md={4}>\r\n          <Paper className={classes.paper}>\r\n            <Calendar\r\n              onChange={onChange}\r\n              value={value}\r\n            />\r\n            <div className={classes.scheduleRepairDialogButton}>\r\n              <ScheduleRepairDialog />\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item>\r\n          <Paper className={classes.paper}>\r\n            <TableContainer className={classes.container}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth }}\r\n                      >\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    return (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","C:\\Users\\petro\\refract-labs-project\\src\\components\\Inventory.js",[],"C:\\Users\\petro\\refract-labs-project\\src\\components\\Customers.js",[],"C:\\Users\\petro\\refract-labs-project\\src\\components\\ScheduleRepairDialog.js",[],"C:\\Users\\petro\\refract-labs-project\\src\\components\\LandingPage.js",[],"C:\\Users\\petro\\refract-labs-project\\src\\components\\Footer.js",["50","51","52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":3,"column":26,"nodeType":"59","messageId":"60","endLine":3,"endColumn":36},{"ruleId":"57","severity":1,"message":"61","line":81,"column":10,"nodeType":"59","messageId":"60","endLine":81,"endColumn":14},{"ruleId":"57","severity":1,"message":"62","line":83,"column":9,"nodeType":"59","messageId":"60","endLine":83,"endColumn":24},{"ruleId":"57","severity":1,"message":"63","line":87,"column":9,"nodeType":"59","messageId":"60","endLine":87,"endColumn":20},{"ruleId":"57","severity":1,"message":"64","line":3,"column":10,"nodeType":"59","messageId":"60","endLine":3,"endColumn":25},{"ruleId":"57","severity":1,"message":"65","line":4,"column":10,"nodeType":"59","messageId":"60","endLine":4,"endColumn":18},{"ruleId":"57","severity":1,"message":"66","line":4,"column":20,"nodeType":"59","messageId":"60","endLine":4,"endColumn":30},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'open' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'FontAwesomeIcon' is defined but never used.","'faGithub' is defined but never used.","'faLinkedin' is defined but never used.","no-global-assign","no-unsafe-negation"]